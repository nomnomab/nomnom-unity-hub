name: "publish"

on:
  push:
    branches:
      - master

jobs:
  v1:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--verbose --target universal-apple-darwin"
          - platform: "ubuntu-20.04"
            args: "--verbose"
          - platform: "windows-latest"
            args: "--verbose"

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      # node
      - name: install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.x.x

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm

      # rust
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        run: pnpm install # change this to npm, pnpm or bun depending on which one you use.

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: ./src-tauri

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
